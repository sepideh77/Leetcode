class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        num_open_paranthesis = 0
        num_open_curlparanthesis = 0
        num_open_brackets = 0
        for i in range(0,len(s)):
            if s[i] == '(':
                num_open_paranthesis = num_open_paranthesis + 1
            if s[i] == '{':
                num_open_curlparanthesi = num_open_curlparanthesi + 1
            if s[i] == '[':
                num_open_brackets  = num_open_brackets  + 1
            
            if s[i] == ')':
                num_open_paranthesis = num_open_paranthesis - 1
            if s[i] == '}':
                num_open_curlparanthesi = num_open_curlparanthesi - 1 
            if s[i] == '[':
                num_open_brackets  = num_open_brackets  - 1
                
        if  num_open_paranthesis == 0 and num_open_curlparanthesis == 0 and  num_open_brackets == 0:
            return True
        else:
            return False
